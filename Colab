# Instalación de la librería de optimización
!pip install pulp

import pulp
import pandas as pd
import numpy as np

# Definir el problema de optimización
print("=== PROBLEMA DE OPTIMIZACIÓN DE REFINERÍA ===\n")

# Crear el problema de maximización
prob = pulp.LpProblem("Refineria_Combustible", pulp.LpMaximize)

# Variables de decisión
# Xij = barriles del tipo de petróleo i para producir combustible j
# i = 1,2,3,4 (tipos de petróleo)
# j = 1,2,3 (tipos de combustible)
# Pi = barriles del tipo de petróleo i vendidos directamente

variables = {}
for i in range(1, 5):  # Tipos de petróleo 1-4
    for j in range(1, 4):  # Tipos de combustible 1-3
        variables[f'X{i}{j}'] = pulp.LpVariable(f'X{i}{j}', lowBound=0, cat='Continuous')

# Variables para venta directa de petróleo
P1 = pulp.LpVariable('P1', lowBound=0, cat='Continuous')  # Petróleo tipo 1 vendido directo
P2 = pulp.LpVariable('P2', lowBound=0, cat='Continuous')  # Petróleo tipo 2 vendido directo
P3 = pulp.LpVariable('P3', lowBound=0, cat='Continuous')  # Petróleo tipo 3 vendido directo
P4 = pulp.LpVariable('P4', lowBound=0, cat='Continuous')  # Petróleo tipo 4 vendido directo

# Extraer variables individuales para facilidad de uso
X11, X12, X13 = variables['X11'], variables['X12'], variables['X13']
X21, X22, X23 = variables['X21'], variables['X22'], variables['X23']
X31, X32, X33 = variables['X31'], variables['X32'], variables['X33']
X41, X42, X43 = variables['X41'], variables['X42'], variables['X43']

# Variables para la venta de combustibles
Y1 = pulp.LpVariable('Y1', lowBound=0, cat='Continuous')  # Combustible tipo 1 vendido
Y2 = pulp.LpVariable('Y2', lowBound=0, cat='Continuous')  # Combustible tipo 2 vendido
Y3 = pulp.LpVariable('Y3', lowBound=0, cat='Continuous')  # Combustible tipo 3 vendido

print("Variables de decisión creadas:")
print("- Xij: barriles del petróleo tipo i para producir combustible tipo j")
print("- Yj: barriles del combustible tipo j vendidos")
print("- Pi: barriles del petróleo tipo i vendidos directamente\n")

# Función objetivo: Maximizar ganancia
# Ganancia = Ingresos por venta de combustibles + Ingresos por venta de petróleo - Costos de petróleo
precios_venta_combustible = {1: 45.15, 2: 42.95, 3: 40.90}  # USD por barril de combustible
costos_petroleo = {1: 31.02, 2: 33.15, 3: 36.35, 4: 38.75}  # USD por barril de petróleo

# Según el problema, el petróleo se puede vender a:
# - Tipo 1 (octanaje 68): menor precio que el de octanaje 91, digamos 38.95 USD/barril
# - Otros tipos: usar precios basados en sus octanajes
# Del problema veo que menciona USD 38.95 y USD 36.85, asumo son precios de venta de petróleo
precios_venta_petroleo = {1: 36.85, 2: 37.50, 3: 38.95, 4: 40.00}  # USD por barril de petróleo

# Ingresos por venta de combustibles
ingresos_combustibles = 45.15 * Y1 + 42.95 * Y2 + 40.90 * Y3

# Ingresos por venta directa de petróleo
ingresos_petroleo = 36.85 * P1 + 37.50 * P2 + 38.95 * P3 + 40.00 * P4

# Costos de petróleo (todo el petróleo comprado)
costos = (31.02 * (X11 + X12 + X13 + P1) +
          33.15 * (X21 + X22 + X23 + P2) +
          36.35 * (X31 + X32 + X33 + P3) +
          38.75 * (X41 + X42 + X43 + P4))

# Función objetivo
prob += ingresos_combustibles + ingresos_petroleo - costos, "Ganancia_Total"

print("Función objetivo definida: Maximizar (Ingresos por combustibles + Ingresos por petróleo - Costos)")

# Restricciones

# 1. Disponibilidad de petróleo (barriles disponibles por día)
# Total usado para producción + vendido directo <= disponible
prob += X11 + X12 + X13 + P1 <= 4000, "Disponibilidad_Petroleo_1"
prob += X21 + X22 + X23 + P2 <= 5050, "Disponibilidad_Petroleo_2"
prob += X31 + X32 + X33 + P3 <= 7100, "Disponibilidad_Petroleo_3"
prob += X41 + X42 + X43 + P4 <= 4300, "Disponibilidad_Petroleo_4"

# 2. Balance de combustible producido vs vendido
prob += X11 + X21 + X31 + X41 == Y1, "Balance_Combustible_1"
prob += X12 + X22 + X32 + X42 == Y2, "Balance_Combustible_2"
prob += X13 + X23 + X33 + X43 == Y3, "Balance_Combustible_3"

# 3. Restricciones de venta esperada
prob += Y1 <= 10000, "Venta_Max_Combustible_1"
prob += Y3 >= 15000, "Venta_Min_Combustible_3"

# 4. Restricciones de octanaje mínimo
# Octanaje promedio debe ser >= octanaje mínimo requerido
octanajes = {1: 68, 2: 86, 3: 91, 4: 99}
octanaje_min = {1: 95, 2: 90, 3: 85}

# Para combustible tipo 1: octanaje promedio >= 95
prob += (68 * X11 + 86 * X21 + 91 * X31 + 99 * X41) >= 95 * Y1, "Octanaje_Min_Combustible_1"

# Para combustible tipo 2: octanaje promedio >= 90
prob += (68 * X12 + 86 * X22 + 91 * X32 + 99 * X42) >= 90 * Y2, "Octanaje_Min_Combustible_2"

# Para combustible tipo 3: octanaje promedio >= 85
prob += (68 * X13 + 86 * X23 + 91 * X33 + 99 * X43) >= 85 * Y3, "Octanaje_Min_Combustible_3"

print("\nRestricciones agregadas:")
print("- Disponibilidad de cada tipo de petróleo (incluyendo venta directa)")
print("- Balance de combustible (producido = vendido)")
print("- Límites de venta esperada")
print("- Octanaje mínimo para cada combustible")

# Resolver el problema
print("\n=== RESOLVIENDO EL PROBLEMA ===")
prob.solve()

# Mostrar resultados
print(f"\nEstado de la solución: {pulp.LpStatus[prob.status]}")

if prob.status == pulp.LpStatusOptimal:
    print(f"\n=== SOLUCIÓN ÓPTIMA ===")
    print(f"Ganancia máxima: ${prob.objective.value():,.2f} USD por día\n")

    print("ASIGNACIÓN DE PETRÓLEO (barriles/día):")
    print("=" * 60)

    # Crear tabla de resultados
    data = []
    tipos_petroleo = [1, 2, 3, 4]
    tipos_combustible = [1, 2, 3]

    for i in tipos_petroleo:
        row = [f"Petróleo {i}"]
        total_produccion = 0
        for j in tipos_combustible:
            valor = variables[f'X{i}{j}'].value()
            if valor is None:
                valor = 0
            row.append(f"{valor:.1f}")
            total_produccion += valor

        # Agregar venta directa
        venta_directa = eval(f'P{i}').value() or 0
        row.append(f"{venta_directa:.1f}")
        row.append(f"{total_produccion + venta_directa:.1f}")
        data.append(row)

    # Totales por combustible
    totales_combustible = ["Total"]
    for j in tipos_combustible:
        total = sum(variables[f'X{i}{j}'].value() or 0 for i in tipos_petroleo)
        totales_combustible.append(f"{total:.1f}")

    total_venta_directa = sum(eval(f'P{i}').value() or 0 for i in tipos_petroleo)
    total_general = (sum(variables[f'X{i}{j}'].value() or 0
                        for i in tipos_petroleo for j in tipos_combustible) + total_venta_directa)
    totales_combustible.extend([f"{total_venta_directa:.1f}", f"{total_general:.1f}"])
    data.append(totales_combustible)

    df_asignacion = pd.DataFrame(data,
                                columns=["Tipo Petróleo", "Combustible 1", "Combustible 2",
                                        "Combustible 3", "Venta Directa", "Total Usado"])
    print(df_asignacion.to_string(index=False))

    print(f"\nPRODUCCIÓN Y VENTA DE COMBUSTIBLES:")
    print("=" * 40)
    for j in tipos_combustible:
        producido = sum(variables[f'X{i}{j}'].value() or 0 for i in tipos_petroleo)
        vendido = eval(f'Y{j}').value() or 0
        precio = precios_venta_combustible[j]
        ingreso = vendido * precio
        print(f"Combustible {j}: {producido:.1f} barriles producidos = {vendido:.1f} barriles vendidos")
        print(f"  Precio: ${precio:.2f}/barril → Ingreso: ${ingreso:,.2f}")

        # Calcular octanaje promedio
        octanaje_prom = 0
        if producido > 0:
            octanaje_prom = sum((variables[f'X{i}{j}'].value() or 0) * octanajes[i]
                              for i in tipos_petroleo) / producido
        print(f"  Octanaje promedio: {octanaje_prom:.1f} (mínimo requerido: {octanaje_min[j]})")
        print()

    print("VENTA DIRECTA DE PETRÓLEO:")
    print("=" * 30)
    total_ingreso_petroleo = 0
    for i in tipos_petroleo:
        vendido = eval(f'P{i}').value() or 0
        precio = precios_venta_petroleo[i]
        ingreso = vendido * precio
        total_ingreso_petroleo += ingreso
        if vendido > 0:
            print(f"Petróleo {i}: {vendido:.1f} barriles vendidos a ${precio:.2f}/barril → ${ingreso:,.2f}")

    if total_ingreso_petroleo == 0:
        print("No se vende petróleo directamente (toda la producción se refina)")

    print(f"\nUTILIZACIÓN DE RECURSOS:")
    print("=" * 30)
    disponibilidad = {1: 4000, 2: 5050, 3: 7100, 4: 4300}
    for i in tipos_petroleo:
        usado_produccion = sum(variables[f'X{i}{j}'].value() or 0 for j in tipos_combustible)
        vendido_directo = eval(f'P{i}').value() or 0
        total_usado = usado_produccion + vendido_directo
        disponible = disponibilidad[i]
        porcentaje = (total_usado / disponible) * 100
        print(f"Petróleo {i}: {total_usado:.1f}/{disponible} barriles ({porcentaje:.1f}% utilizado)")
        print(f"  - Para producción: {usado_produccion:.1f} barriles")
        print(f"  - Venta directa: {vendido_directo:.1f} barriles")

    print(f"\nCOSTOS Y INGRESOS DETALLADOS:")
    print("=" * 35)

    total_ingresos_combustibles = 0
    total_ingresos_petroleo = 0
    total_costos = 0

    print("INGRESOS POR COMBUSTIBLES:")
    for j in tipos_combustible:
        vendido = eval(f'Y{j}').value() or 0
        precio = precios_venta_combustible[j]
        ingreso = vendido * precio
        total_ingresos_combustibles += ingreso
        print(f"  Combustible {j}: ${ingreso:,.2f}")

    print("\nINGRESOS POR PETRÓLEO DIRECTO:")
    for i in tipos_petroleo:
        vendido = eval(f'P{i}').value() or 0
        precio = precios_venta_petroleo[i]
        ingreso = vendido * precio
        total_ingresos_petroleo += ingreso
        if vendido > 0:
            print(f"  Petróleo {i}: ${ingreso:,.2f}")

    if total_ingresos_petroleo == 0:
        print("  Ninguno")

    print("\nCOSTOS DE PETRÓLEO:")
    for i in tipos_petroleo:
        usado_total = (sum(variables[f'X{i}{j}'].value() or 0 for j in tipos_combustible) +
                      (eval(f'P{i}').value() or 0))
        costo_unitario = costos_petroleo[i]
        costo_total = usado_total * costo_unitario
        total_costos += costo_total
        if usado_total > 0:
            print(f"  Petróleo {i}: ${costo_total:,.2f}")

    print(f"\nRESUMEN FINANCIERO:")
    print("=" * 20)
    print(f"Ingresos por combustibles: ${total_ingresos_combustibles:,.2f}")
    print(f"Ingresos por petróleo directo: ${total_ingresos_petroleo:,.2f}")
    print(f"Total Ingresos: ${total_ingresos_combustibles + total_ingresos_petroleo:,.2f}")
    print(f"Total Costos: ${total_costos:,.2f}")
    print(f"Ganancia Neta: ${total_ingresos_combustibles + total_ingresos_petroleo - total_costos:,.2f}")

else:
    print("No se encontró una solución óptima")
    print("Posibles causas:")
    print("- El problema es infactible (restricciones contradictorias)")
    print("- El problema es no acotado")
    print("- Error en la formulación")# Instalación de la librería de optimización
!pip install pulp

import pulp
import pandas as pd
import numpy as np

# Definir el problema de optimización
print("=== PROBLEMA DE OPTIMIZACIÓN DE REFINERÍA ===\n")

# Crear el problema de maximización
prob = pulp.LpProblem("Refineria_Combustible", pulp.LpMaximize)

# Variables de decisión
# Xij = barriles del tipo de petróleo i para producir combustible j
# i = 1,2,3,4 (tipos de petróleo)
# j = 1,2,3 (tipos de combustible)
# Pi = barriles del tipo de petróleo i vendidos directamente

variables = {}
for i in range(1, 5):  # Tipos de petróleo 1-4
    for j in range(1, 4):  # Tipos de combustible 1-3
        variables[f'X{i}{j}'] = pulp.LpVariable(f'X{i}{j}', lowBound=0, cat='Continuous')

# Variables para venta directa de petróleo
P1 = pulp.LpVariable('P1', lowBound=0, cat='Continuous')  # Petróleo tipo 1 vendido directo
P2 = pulp.LpVariable('P2', lowBound=0, cat='Continuous')  # Petróleo tipo 2 vendido directo
P3 = pulp.LpVariable('P3', lowBound=0, cat='Continuous')  # Petróleo tipo 3 vendido directo
P4 = pulp.LpVariable('P4', lowBound=0, cat='Continuous')  # Petróleo tipo 4 vendido directo

# Extraer variables individuales para facilidad de uso
X11, X12, X13 = variables['X11'], variables['X12'], variables['X13']
X21, X22, X23 = variables['X21'], variables['X22'], variables['X23']
X31, X32, X33 = variables['X31'], variables['X32'], variables['X33']
X41, X42, X43 = variables['X41'], variables['X42'], variables['X43']

# Variables para la venta de combustibles
Y1 = pulp.LpVariable('Y1', lowBound=0, cat='Continuous')  # Combustible tipo 1 vendido
Y2 = pulp.LpVariable('Y2', lowBound=0, cat='Continuous')  # Combustible tipo 2 vendido
Y3 = pulp.LpVariable('Y3', lowBound=0, cat='Continuous')  # Combustible tipo 3 vendido

print("Variables de decisión creadas:")
print("- Xij: barriles del petróleo tipo i para producir combustible tipo j")
print("- Yj: barriles del combustible tipo j vendidos")
print("- Pi: barriles del petróleo tipo i vendidos directamente\n")

# Función objetivo: Maximizar ganancia
# Ganancia = Ingresos por venta de combustibles + Ingresos por venta de petróleo - Costos de petróleo
precios_venta_combustible = {1: 45.15, 2: 42.95, 3: 40.90}  # USD por barril de combustible
costos_petroleo = {1: 31.02, 2: 33.15, 3: 36.35, 4: 38.75}  # USD por barril de petróleo

# Según el problema, el petróleo se puede vender a:
# - Tipo 1 (octanaje 68): menor precio que el de octanaje 91, digamos 38.95 USD/barril
# - Otros tipos: usar precios basados en sus octanajes
# Del problema veo que menciona USD 38.95 y USD 36.85, asumo son precios de venta de petróleo
precios_venta_petroleo = {1: 36.85, 2: 37.50, 3: 38.95, 4: 40.00}  # USD por barril de petróleo

# Ingresos por venta de combustibles
ingresos_combustibles = 45.15 * Y1 + 42.95 * Y2 + 40.90 * Y3

# Ingresos por venta directa de petróleo
ingresos_petroleo = 36.85 * P1 + 37.50 * P2 + 38.95 * P3 + 40.00 * P4

# Costos de petróleo (todo el petróleo comprado)
costos = (31.02 * (X11 + X12 + X13 + P1) +
          33.15 * (X21 + X22 + X23 + P2) +
          36.35 * (X31 + X32 + X33 + P3) +
          38.75 * (X41 + X42 + X43 + P4))

# Función objetivo
prob += ingresos_combustibles + ingresos_petroleo - costos, "Ganancia_Total"

print("Función objetivo definida: Maximizar (Ingresos por combustibles + Ingresos por petróleo - Costos)")

# Restricciones

# 1. Disponibilidad de petróleo (barriles disponibles por día)
# Total usado para producción + vendido directo <= disponible
prob += X11 + X12 + X13 + P1 <= 4000, "Disponibilidad_Petroleo_1"
prob += X21 + X22 + X23 + P2 <= 5050, "Disponibilidad_Petroleo_2"
prob += X31 + X32 + X33 + P3 <= 7100, "Disponibilidad_Petroleo_3"
prob += X41 + X42 + X43 + P4 <= 4300, "Disponibilidad_Petroleo_4"

# 2. Balance de combustible producido vs vendido
prob += X11 + X21 + X31 + X41 == Y1, "Balance_Combustible_1"
prob += X12 + X22 + X32 + X42 == Y2, "Balance_Combustible_2"
prob += X13 + X23 + X33 + X43 == Y3, "Balance_Combustible_3"

# 3. Restricciones de venta esperada
prob += Y1 <= 10000, "Venta_Max_Combustible_1"
prob += Y3 >= 15000, "Venta_Min_Combustible_3"

# 4. Restricciones de octanaje mínimo
# Octanaje promedio debe ser >= octanaje mínimo requerido
octanajes = {1: 68, 2: 86, 3: 91, 4: 99}
octanaje_min = {1: 95, 2: 90, 3: 85}

# Para combustible tipo 1: octanaje promedio >= 95
prob += (68 * X11 + 86 * X21 + 91 * X31 + 99 * X41) >= 95 * Y1, "Octanaje_Min_Combustible_1"

# Para combustible tipo 2: octanaje promedio >= 90
prob += (68 * X12 + 86 * X22 + 91 * X32 + 99 * X42) >= 90 * Y2, "Octanaje_Min_Combustible_2"

# Para combustible tipo 3: octanaje promedio >= 85
prob += (68 * X13 + 86 * X23 + 91 * X33 + 99 * X43) >= 85 * Y3, "Octanaje_Min_Combustible_3"

print("\nRestricciones agregadas:")
print("- Disponibilidad de cada tipo de petróleo (incluyendo venta directa)")
print("- Balance de combustible (producido = vendido)")
print("- Límites de venta esperada")
print("- Octanaje mínimo para cada combustible")

# Resolver el problema
print("\n=== RESOLVIENDO EL PROBLEMA ===")
prob.solve()

# Mostrar resultados
print(f"\nEstado de la solución: {pulp.LpStatus[prob.status]}")

if prob.status == pulp.LpStatusOptimal:
    print(f"\n=== SOLUCIÓN ÓPTIMA ===")
    print(f"Ganancia máxima: ${prob.objective.value():,.2f} USD por día\n")

    print("ASIGNACIÓN DE PETRÓLEO (barriles/día):")
    print("=" * 60)

    # Crear tabla de resultados
    data = []
    tipos_petroleo = [1, 2, 3, 4]
    tipos_combustible = [1, 2, 3]

    for i in tipos_petroleo:
        row = [f"Petróleo {i}"]
        total_produccion = 0
        for j in tipos_combustible:
            valor = variables[f'X{i}{j}'].value()
            if valor is None:
                valor = 0
            row.append(f"{valor:.1f}")
            total_produccion += valor

        # Agregar venta directa
        venta_directa = eval(f'P{i}').value() or 0
        row.append(f"{venta_directa:.1f}")
        row.append(f"{total_produccion + venta_directa:.1f}")
        data.append(row)

    # Totales por combustible
    totales_combustible = ["Total"]
    for j in tipos_combustible:
        total = sum(variables[f'X{i}{j}'].value() or 0 for i in tipos_petroleo)
        totales_combustible.append(f"{total:.1f}")

    total_venta_directa = sum(eval(f'P{i}').value() or 0 for i in tipos_petroleo)
    total_general = (sum(variables[f'X{i}{j}'].value() or 0
                        for i in tipos_petroleo for j in tipos_combustible) + total_venta_directa)
    totales_combustible.extend([f"{total_venta_directa:.1f}", f"{total_general:.1f}"])
    data.append(totales_combustible)

    df_asignacion = pd.DataFrame(data,
                                columns=["Tipo Petróleo", "Combustible 1", "Combustible 2",
                                        "Combustible 3", "Venta Directa", "Total Usado"])
    print(df_asignacion.to_string(index=False))

    print(f"\nPRODUCCIÓN Y VENTA DE COMBUSTIBLES:")
    print("=" * 40)
    for j in tipos_combustible:
        producido = sum(variables[f'X{i}{j}'].value() or 0 for i in tipos_petroleo)
        vendido = eval(f'Y{j}').value() or 0
        precio = precios_venta_combustible[j]
        ingreso = vendido * precio
        print(f"Combustible {j}: {producido:.1f} barriles producidos = {vendido:.1f} barriles vendidos")
        print(f"  Precio: ${precio:.2f}/barril → Ingreso: ${ingreso:,.2f}")

        # Calcular octanaje promedio
        octanaje_prom = 0
        if producido > 0:
            octanaje_prom = sum((variables[f'X{i}{j}'].value() or 0) * octanajes[i]
                              for i in tipos_petroleo) / producido
        print(f"  Octanaje promedio: {octanaje_prom:.1f} (mínimo requerido: {octanaje_min[j]})")
        print()

    print("VENTA DIRECTA DE PETRÓLEO:")
    print("=" * 30)
    total_ingreso_petroleo = 0
    for i in tipos_petroleo:
        vendido = eval(f'P{i}').value() or 0
        precio = precios_venta_petroleo[i]
        ingreso = vendido * precio
        total_ingreso_petroleo += ingreso
        if vendido > 0:
            print(f"Petróleo {i}: {vendido:.1f} barriles vendidos a ${precio:.2f}/barril → ${ingreso:,.2f}")

    if total_ingreso_petroleo == 0:
        print("No se vende petróleo directamente (toda la producción se refina)")

    print(f"\nUTILIZACIÓN DE RECURSOS:")
    print("=" * 30)
    disponibilidad = {1: 4000, 2: 5050, 3: 7100, 4: 4300}
    for i in tipos_petroleo:
        usado_produccion = sum(variables[f'X{i}{j}'].value() or 0 for j in tipos_combustible)
        vendido_directo = eval(f'P{i}').value() or 0
        total_usado = usado_produccion + vendido_directo
        disponible = disponibilidad[i]
        porcentaje = (total_usado / disponible) * 100
        print(f"Petróleo {i}: {total_usado:.1f}/{disponible} barriles ({porcentaje:.1f}% utilizado)")
        print(f"  - Para producción: {usado_produccion:.1f} barriles")
        print(f"  - Venta directa: {vendido_directo:.1f} barriles")

    print(f"\nCOSTOS Y INGRESOS DETALLADOS:")
    print("=" * 35)

    total_ingresos_combustibles = 0
    total_ingresos_petroleo = 0
    total_costos = 0

    print("INGRESOS POR COMBUSTIBLES:")
    for j in tipos_combustible:
        vendido = eval(f'Y{j}').value() or 0
        precio = precios_venta_combustible[j]
        ingreso = vendido * precio
        total_ingresos_combustibles += ingreso
        print(f"  Combustible {j}: ${ingreso:,.2f}")

    print("\nINGRESOS POR PETRÓLEO DIRECTO:")
    for i in tipos_petroleo:
        vendido = eval(f'P{i}').value() or 0
        precio = precios_venta_petroleo[i]
        ingreso = vendido * precio
        total_ingresos_petroleo += ingreso
        if vendido > 0:
            print(f"  Petróleo {i}: ${ingreso:,.2f}")

    if total_ingresos_petroleo == 0:
        print("  Ninguno")

    print("\nCOSTOS DE PETRÓLEO:")
    for i in tipos_petroleo:
        usado_total = (sum(variables[f'X{i}{j}'].value() or 0 for j in tipos_combustible) +
                      (eval(f'P{i}').value() or 0))
        costo_unitario = costos_petroleo[i]
        costo_total = usado_total * costo_unitario
        total_costos += costo_total
        if usado_total > 0:
            print(f"  Petróleo {i}: ${costo_total:,.2f}")

    print(f"\nRESUMEN FINANCIERO:")
    print("=" * 20)
    print(f"Ingresos por combustibles: ${total_ingresos_combustibles:,.2f}")
    print(f"Ingresos por petróleo directo: ${total_ingresos_petroleo:,.2f}")
    print(f"Total Ingresos: ${total_ingresos_combustibles + total_ingresos_petroleo:,.2f}")
    print(f"Total Costos: ${total_costos:,.2f}")
    print(f"Ganancia Neta: ${total_ingresos_combustibles + total_ingresos_petroleo - total_costos:,.2f}")

else:
    print("No se encontró una solución óptima")
    print("Posibles causas:")
    print("- El problema es infactible (restricciones contradictorias)")
    print("- El problema es no acotado")
    print("- Error en la formulación")
